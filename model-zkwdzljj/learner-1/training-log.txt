Training with training/test data at:
  DATA_DIR: /mnt/data/reverseoink
  MODEL_DIR: /job/model-code
  TRAINING_JOB: 
  TRAINING_COMMAND: cd "$(dirname "$(find . -name "start.sh" -maxdepth 2 | head -1)")" && chmod 777 ./start.sh && ./start.sh 1000
Storing trained model at:
  RESULT_DIR: /mnt/results/reverseoink/training-vt65LuiMR
Sun Jun 14 07:54:28 UTC 2020: Running Tensorflow job
Collecting Cython
  Downloading Cython-0.29.20-cp36-cp36m-manylinux1_x86_64.whl (2.0 MB)
Collecting contextlib2
  Downloading contextlib2-0.6.0.post1-py2.py3-none-any.whl (9.8 kB)
Collecting matplotlib
  Downloading matplotlib-3.2.1-cp36-cp36m-manylinux1_x86_64.whl (12.4 MB)
Requirement already satisfied: numpy>=1.11 in /opt/anaconda/envs/wmlce/lib/python3.6/site-packages (from matplotlib) (1.16.6)
Requirement already satisfied: python-dateutil>=2.1 in /opt/anaconda/envs/wmlce/lib/python3.6/site-packages (from matplotlib) (2.8.1)
Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /opt/anaconda/envs/wmlce/lib/python3.6/site-packages (from matplotlib) (2.4.7)
Collecting kiwisolver>=1.0.1
  Downloading kiwisolver-1.2.0-cp36-cp36m-manylinux1_x86_64.whl (88 kB)
Collecting cycler>=0.10
  Downloading cycler-0.10.0-py2.py3-none-any.whl (6.5 kB)
Requirement already satisfied: six>=1.5 in /opt/anaconda/envs/wmlce/lib/python3.6/site-packages (from python-dateutil>=2.1->matplotlib) (1.12.0)
Installing collected packages: Cython, contextlib2, kiwisolver, cycler, matplotlib
  WARNING: The scripts cygdb, cython and cythonize are installed in '/home/pwrai/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
Successfully installed Cython-0.29.20 contextlib2-0.6.0.post1 cycler-0.10.0 kiwisolver-1.2.0 matplotlib-3.2.1
Collecting pycocotools==2.0.0
  Downloading pycocotools-2.0.0.tar.gz (1.5 MB)
Collecting coremltools==3.3
  Downloading coremltools-3.3-cp36-none-manylinux1_x86_64.whl (3.4 MB)
Collecting tfcoreml==1.1
  Downloading tfcoreml-1.1-py3-none-any.whl (44 kB)
Collecting tensorflowjs==1.4.0
  Downloading tensorflowjs-1.4.0-py3-none-any.whl (56 kB)
Collecting tensorflow-hub==0.3.0
  Downloading tensorflow_hub-0.3.0-py2.py3-none-any.whl (73 kB)
Collecting h5py==2.8.0
  Downloading h5py-2.8.0-cp36-cp36m-manylinux1_x86_64.whl (2.8 MB)
Collecting numpy==1.17.5
  Downloading numpy-1.17.5-cp36-cp36m-manylinux1_x86_64.whl (20.0 MB)
Collecting sympy==1.5.1
  Downloading sympy-1.5.1-py2.py3-none-any.whl (5.6 MB)
Collecting mpmath==1.1.0
  Downloading mpmath-1.1.0.tar.gz (512 kB)
Building wheels for collected packages: pycocotools, mpmath
  Building wheel for pycocotools (setup.py): started
  Building wheel for pycocotools (setup.py): finished with status 'done'
  Created wheel for pycocotools: filename=pycocotools-2.0.0-cp36-cp36m-linux_x86_64.whl size=274279 sha256=53454b6f227b20bfa7c5a49d867b300c00d1fb045690568c1d611a761ae42131
  Stored in directory: /home/pwrai/.cache/pip/wheels/64/7a/c0/ac8f633d11a5f1a6902c72acb9fa828a2bb3639afba4e94a6c
  Building wheel for mpmath (setup.py): started
  Building wheel for mpmath (setup.py): finished with status 'done'
  Created wheel for mpmath: filename=mpmath-1.1.0-py3-none-any.whl size=532239 sha256=f225d79f859a5cd540a54fb5b076b332312fd2ff57939aa549c7a142817272e5
  Stored in directory: /home/pwrai/.cache/pip/wheels/e8/38/69/aa17553ad31f09ff5fa44c8a1a6c5b47e7c9261e9c7c16b9fb
Successfully built pycocotools mpmath
Installing collected packages: pycocotools, coremltools, tfcoreml, tensorflowjs, tensorflow-hub, h5py, numpy, sympy, mpmath
  WARNING: The script coremlconverter is installed in '/home/pwrai/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The scripts tensorflowjs_converter and tensorflowjs_wizard are installed in '/home/pwrai/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The scripts f2py, f2py3 and f2py3.6 are installed in '/home/pwrai/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script isympy is installed in '/home/pwrai/.local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
Successfully installed coremltools-3.3 h5py-2.8.0 mpmath-1.1.0 numpy-1.17.5 pycocotools-2.0.0 sympy-1.5.1 tensorflow-hub-0.3.0 tensorflowjs-1.4.0 tfcoreml-1.1
/////////////////////////////
// Training classification //
/////////////////////////////
2020-06-14 07:55:04.662355: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
WARNING: Logging before flag parsing goes to stderr.
W0614 07:55:06.374492 140357523867456 module_wrapper.py:139] From /job/model-code/src/classification/retrain.py:1313: The name tf.app.run is deprecated. Please use tf.compat.v1.app.run instead.

W0614 07:55:06.375312 140357523867456 module_wrapper.py:139] From /job/model-code/src/classification/retrain.py:970: The name tf.logging.set_verbosity is deprecated. Please use tf.compat.v1.logging.set_verbosity instead.

W0614 07:55:06.375499 140357523867456 module_wrapper.py:139] From /job/model-code/src/classification/retrain.py:970: The name tf.logging.INFO is deprecated. Please use tf.compat.v1.logging.INFO instead.

W0614 07:55:06.375640 140357523867456 module_wrapper.py:139] From /job/model-code/src/classification/retrain.py:914: The name tf.gfile.Exists is deprecated. Please use tf.io.gfile.exists instead.

W0614 07:55:06.375918 140357523867456 module_wrapper.py:139] From /job/model-code/src/classification/retrain.py:916: The name tf.gfile.MakeDirs is deprecated. Please use tf.io.gfile.makedirs instead.

W0614 07:55:06.376176 140357523867456 module_wrapper.py:139] From /job/model-code/src/classification/retrain.py:168: The name tf.gfile.Walk is deprecated. Please use tf.io.gfile.walk instead.

W0614 07:55:06.380529 140357523867456 module_wrapper.py:139] From /job/model-code/src/classification/retrain.py:181: The name tf.logging.info is deprecated. Please use tf.compat.v1.logging.info instead.

I0614 07:55:06.380830 140357523867456 retrain.py:181] Looking for images in 'Fire'
W0614 07:55:06.381065 140357523867456 module_wrapper.py:139] From /job/model-code/src/classification/retrain.py:184: The name tf.gfile.Glob is deprecated. Please use tf.io.gfile.glob instead.

I0614 07:55:06.390628 140357523867456 retrain.py:181] Looking for images in 'Smoke'
W0614 07:55:06.400429 140357523867456 module_wrapper.py:139] From /job/model-code/src/classification/retrain.py:189: The name tf.logging.warning is deprecated. Please use tf.compat.v1.logging.warning instead.

W0614 07:55:06.400784 140357523867456 retrain.py:190] WARNING: Folder has less than 20 images, which may cause issues.
I0614 07:55:06.401597 140357523867456 resolver.py:79] Using /tmp/tfhub_modules to cache modules.
I0614 07:55:06.405233 140357523867456 resolver.py:398] Downloading TF-Hub Module 'https://tfhub.dev/google/imagenet/mobilenet_v1_100_224/feature_vector/1'.
I0614 07:55:07.061699 140357523867456 resolver.py:122] Downloaded https://tfhub.dev/google/imagenet/mobilenet_v1_100_224/feature_vector/1, Total size: 13.22MB
I0614 07:55:07.062185 140357523867456 resolver.py:413] Downloaded TF-Hub Module 'https://tfhub.dev/google/imagenet/mobilenet_v1_100_224/feature_vector/1'.
W0614 07:55:07.082372 140357523867456 module_wrapper.py:139] From /job/model-code/src/classification/retrain.py:305: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

2020-06-14 07:55:07.142031: W tensorflow/core/graph/graph_constructor.cc:1491] Importing a graph with a lower producer version 26 into an existing graph with producer version 134. Shape inference will have run different parts of the graph with different producer versions.
I0614 07:55:08.314075 140357523867456 saver.py:1503] Saver not created because there are no variables in the graph to restore
W0614 07:55:08.429884 140357523867456 module_wrapper.py:139] From /job/model-code/src/classification/retrain.py:746: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

W0614 07:55:08.431803 140357523867456 module_wrapper.py:139] From /job/model-code/src/classification/retrain.py:758: The name tf.truncated_normal is deprecated. Please use tf.random.truncated_normal instead.

W0614 07:55:08.442185 140357523867456 module_wrapper.py:139] From /job/model-code/src/classification/retrain.py:709: The name tf.summary.scalar is deprecated. Please use tf.compat.v1.summary.scalar instead.

W0614 07:55:08.455812 140357523867456 module_wrapper.py:139] From /job/model-code/src/classification/retrain.py:715: The name tf.summary.histogram is deprecated. Please use tf.compat.v1.summary.histogram instead.

W0614 07:55:08.477416 140357523867456 module_wrapper.py:139] From /job/model-code/src/classification/retrain.py:790: The name tf.losses.sparse_softmax_cross_entropy is deprecated. Please use tf.compat.v1.losses.sparse_softmax_cross_entropy instead.

W0614 07:55:08.486198 140357523867456 deprecation.py:323] From /opt/anaconda/envs/wmlce/lib/python3.6/site-packages/tensorflow_core/python/ops/losses/losses_impl.py:121: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.where in 2.0, which has the same broadcast rule as np.where
W0614 07:55:08.494261 140357523867456 module_wrapper.py:139] From /job/model-code/src/classification/retrain.py:796: The name tf.train.GradientDescentOptimizer is deprecated. Please use tf.compat.v1.train.GradientDescentOptimizer instead.

W0614 07:55:08.529693 140357523867456 module_wrapper.py:139] From /job/model-code/src/classification/retrain.py:1009: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

2020-06-14 07:55:08.530825: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcuda.so.1
2020-06-14 07:55:10.611736: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1639] Found device 0 with properties: 
name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235
pciBusID: 0000:b2:00.0
2020-06-14 07:55:10.611811: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2020-06-14 07:55:10.614253: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
2020-06-14 07:55:10.616662: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10
2020-06-14 07:55:10.617542: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10
2020-06-14 07:55:10.621016: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10
2020-06-14 07:55:10.622231: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10
2020-06-14 07:55:10.626196: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2020-06-14 07:55:10.628005: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1767] Adding visible gpu devices: 0
2020-06-14 07:55:10.629910: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 AVX512F FMA
2020-06-14 07:55:10.660067: I tensorflow/core/platform/profile_utils/cpu_utils.cc:101] CPU Frequency: 2200000000 Hz
2020-06-14 07:55:10.665072: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x55f10f233e30 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-06-14 07:55:10.665141: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-06-14 07:55:10.666670: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1639] Found device 0 with properties: 
name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235
pciBusID: 0000:b2:00.0
2020-06-14 07:55:10.666735: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2020-06-14 07:55:10.666773: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
2020-06-14 07:55:10.666790: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10
2020-06-14 07:55:10.666806: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10
2020-06-14 07:55:10.666823: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10
2020-06-14 07:55:10.666840: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10
2020-06-14 07:55:10.666857: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2020-06-14 07:55:10.669317: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1767] Adding visible gpu devices: 0
2020-06-14 07:55:10.669365: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2020-06-14 07:55:11.129403: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1180] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-06-14 07:55:11.129459: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1186]      0 
2020-06-14 07:55:11.129470: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1199] 0:   N 
2020-06-14 07:55:11.132592: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1325] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 10751 MB memory) -> physical GPU (device: 0, name: Tesla K80, pci bus id: 0000:b2:00.0, compute capability: 3.7)
2020-06-14 07:55:11.135101: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x55f11da70100 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
2020-06-14 07:55:11.135127: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Tesla K80, Compute Capability 3.7
W0614 07:55:11.140248 140357523867456 module_wrapper.py:139] From /job/model-code/src/classification/retrain.py:1012: The name tf.global_variables_initializer is deprecated. Please use tf.compat.v1.global_variables_initializer instead.

W0614 07:55:11.953070 140357523867456 module_wrapper.py:139] From /job/model-code/src/classification/retrain.py:942: The name tf.image.resize_bilinear is deprecated. Please use tf.compat.v1.image.resize_bilinear instead.

I0614 07:55:11.954758 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Fire/6bdef045-b78e-47bf-a4c7-98822c853cbf.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
W0614 07:55:11.955224 140357523867456 deprecation.py:323] From /job/model-code/src/classification/retrain.py:359: FastGFile.__init__ (from tensorflow.python.platform.gfile) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.gfile.GFile.
2020-06-14 07:55:12.444538: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2020-06-14 07:55:13.243729: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
I0614 07:55:13.633064 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Fire/644f5e5d-57af-4d13-a7a3-cf7f22bb3691.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:13.650911 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Fire/d8f4f573-aff8-4640-a635-553ce8870210.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:13.665756 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Fire/9bd411a8-6930-4852-8982-72d8ade56212.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:13.680884 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Fire/102339cd-de2b-40fd-839a-8c75e836759d.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:13.694976 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Fire/8fcf7c7e-0136-4e15-933f-50b5da9fb435.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:13.710005 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Fire/b6d1f136-622a-4bda-8cb9-d64583b47394.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:13.725603 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Fire/f1533e6b-c312-48bd-ae9b-45e8f0b6c3f4.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:13.740783 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Fire/023b919f-d96c-413b-b7f2-47765564578f.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:13.756601 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Fire/aa8818e7-63a1-4333-a771-b9b229099e5a.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:13.772007 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Fire/9e413715-3697-495e-a329-554f2a24b721.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:13.787295 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Fire/aa5bb89d-3cf1-4724-9700-9a4ff996514a.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:13.801504 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Fire/ef4694cb-c121-404b-9a00-da97dcefe90f.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:13.814844 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Fire/5590c5c9-2f29-491d-a22a-33123e53bcba.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:13.829979 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Fire/51a83ece-7508-4eb0-836e-63bd945fd795.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:13.843647 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Fire/860da81b-8139-4f2a-bfc9-0c7ae43283a8.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:13.858112 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Fire/0e81a972-6f34-4e5e-8e97-c8a9cc6f27ed.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:13.872735 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Fire/01912138-aa4d-4a75-8ca5-772219b06f59.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:13.891062 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Fire/01190711-a249-4268-866e-c027bad4de68.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:13.906011 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Fire/4f7c8997-b56a-4c31-b28a-7bd9016efb7b.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:13.922022 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Smoke/1f21b4fb-134c-4df2-a82a-569e954e453a.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:13.935922 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Smoke/1153e2aa-6430-4d4e-ac66-8523bb492238.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:13.949574 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Smoke/9e87e8d7-3905-46a7-89d3-a0daaa158cc5.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:13.977404 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Smoke/afb58633-9220-4c94-a4cc-6496d73442a6.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:13.993430 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Smoke/65ef9016-3a0b-4a05-9fe3-2e5378a5191a.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:14.008172 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Smoke/4e29eb1c-2423-4eee-ab3f-79ebde0abaa7.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:14.021402 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Smoke/f9cb289d-b7f5-43b2-b390-348296dec423.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:14.035040 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Smoke/826df05e-2259-4ee7-9df7-50132bc68aef.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:14.050440 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Smoke/159ca26e-8b50-4fe9-b036-3ef7fe84a88f.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:14.064918 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Smoke/2e3fcaf5-52a4-42e2-a9fc-c8c0e911541b.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:14.078821 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Smoke/afe6e6c8-f3bd-4ef1-b943-2f028f247f8d.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:14.093485 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Smoke/bc2ff07e-841f-4b51-b3cd-26426e5bbda0.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:14.108959 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Smoke/f536e120-b2e0-4ad2-a829-6ff2aba6e18b.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
I0614 07:55:14.122588 140357523867456 retrain.py:354] Creating bottleneck at /tmp/bottleneck/Smoke/caf8f28b-a66a-4760-817e-6ed3569c1eb9.jpg_https~tfhub.dev~google~imagenet~mobilenet_v1_100_224~feature_vector~1.txt
W0614 07:55:14.149312 140357523867456 module_wrapper.py:139] From /job/model-code/src/classification/retrain.py:1036: The name tf.summary.merge_all is deprecated. Please use tf.compat.v1.summary.merge_all instead.

W0614 07:55:14.151449 140357523867456 module_wrapper.py:139] From /job/model-code/src/classification/retrain.py:1037: The name tf.summary.FileWriter is deprecated. Please use tf.compat.v1.summary.FileWriter instead.

W0614 07:55:14.573246 140357523867456 module_wrapper.py:139] From /job/model-code/src/classification/retrain.py:1045: The name tf.train.Saver is deprecated. Please use tf.compat.v1.train.Saver instead.

I0614 07:55:15.314206 140357523867456 retrain.py:1080] 2020-06-14 07:55:15.314088: Step 0: Train accuracy = 65.0%
I0614 07:55:15.314463 140357523867456 retrain.py:1082] 2020-06-14 07:55:15.314440: Step 0: Cross entropy = 0.580138
I0614 07:55:15.574677 140357523867456 retrain.py:1101] 2020-06-14 07:55:15.574586: Step 0: Validation accuracy = 53.0% (N=100)
I0614 07:55:16.080390 140357523867456 retrain.py:1080] 2020-06-14 07:55:16.080246: Step 10: Train accuracy = 91.0%
I0614 07:55:16.081110 140357523867456 retrain.py:1082] 2020-06-14 07:55:16.081056: Step 10: Cross entropy = 0.249008
I0614 07:55:16.133726 140357523867456 retrain.py:1101] 2020-06-14 07:55:16.133641: Step 10: Validation accuracy = 65.0% (N=100)
I0614 07:55:16.604830 140357523867456 retrain.py:1080] 2020-06-14 07:55:16.604728: Step 20: Train accuracy = 94.0%
I0614 07:55:16.605056 140357523867456 retrain.py:1082] 2020-06-14 07:55:16.605042: Step 20: Cross entropy = 0.198682
I0614 07:55:16.657518 140357523867456 retrain.py:1101] 2020-06-14 07:55:16.657385: Step 20: Validation accuracy = 75.0% (N=100)
I0614 07:55:17.190478 140357523867456 retrain.py:1080] 2020-06-14 07:55:17.190390: Step 30: Train accuracy = 97.0%
I0614 07:55:17.190679 140357523867456 retrain.py:1082] 2020-06-14 07:55:17.190667: Step 30: Cross entropy = 0.148432
I0614 07:55:17.245272 140357523867456 retrain.py:1101] 2020-06-14 07:55:17.245183: Step 30: Validation accuracy = 77.0% (N=100)
I0614 07:55:17.744539 140357523867456 retrain.py:1080] 2020-06-14 07:55:17.744444: Step 40: Train accuracy = 96.0%
I0614 07:55:17.744747 140357523867456 retrain.py:1082] 2020-06-14 07:55:17.744734: Step 40: Cross entropy = 0.123684
I0614 07:55:17.786800 140357523867456 retrain.py:1101] 2020-06-14 07:55:17.786722: Step 40: Validation accuracy = 75.0% (N=100)
I0614 07:55:18.293997 140357523867456 retrain.py:1080] 2020-06-14 07:55:18.293916: Step 50: Train accuracy = 94.0%
I0614 07:55:18.294169 140357523867456 retrain.py:1082] 2020-06-14 07:55:18.294156: Step 50: Cross entropy = 0.129859
I0614 07:55:18.338671 140357523867456 retrain.py:1101] 2020-06-14 07:55:18.338577: Step 50: Validation accuracy = 70.0% (N=100)
I0614 07:55:18.780622 140357523867456 retrain.py:1080] 2020-06-14 07:55:18.780488: Step 60: Train accuracy = 97.0%
I0614 07:55:18.780920 140357523867456 retrain.py:1082] 2020-06-14 07:55:18.780889: Step 60: Cross entropy = 0.099769
I0614 07:55:18.838264 140357523867456 retrain.py:1101] 2020-06-14 07:55:18.838116: Step 60: Validation accuracy = 77.0% (N=100)
I0614 07:55:19.314282 140357523867456 retrain.py:1080] 2020-06-14 07:55:19.314187: Step 70: Train accuracy = 93.0%
I0614 07:55:19.314504 140357523867456 retrain.py:1082] 2020-06-14 07:55:19.314492: Step 70: Cross entropy = 0.126334
I0614 07:55:19.360582 140357523867456 retrain.py:1101] 2020-06-14 07:55:19.360438: Step 70: Validation accuracy = 74.0% (N=100)
I0614 07:55:19.862637 140357523867456 retrain.py:1080] 2020-06-14 07:55:19.862410: Step 80: Train accuracy = 95.0%
I0614 07:55:19.863292 140357523867456 retrain.py:1082] 2020-06-14 07:55:19.863241: Step 80: Cross entropy = 0.126393
I0614 07:55:19.912724 140357523867456 retrain.py:1101] 2020-06-14 07:55:19.912638: Step 80: Validation accuracy = 78.0% (N=100)
I0614 07:55:20.393957 140357523867456 retrain.py:1080] 2020-06-14 07:55:20.393818: Step 90: Train accuracy = 94.0%
I0614 07:55:20.394293 140357523867456 retrain.py:1082] 2020-06-14 07:55:20.394261: Step 90: Cross entropy = 0.123726
I0614 07:55:20.451979 140357523867456 retrain.py:1101] 2020-06-14 07:55:20.451890: Step 90: Validation accuracy = 79.0% (N=100)
I0614 07:55:20.921379 140357523867456 retrain.py:1080] 2020-06-14 07:55:20.921225: Step 100: Train accuracy = 96.0%
I0614 07:55:20.921730 140357523867456 retrain.py:1082] 2020-06-14 07:55:20.921698: Step 100: Cross entropy = 0.093402
I0614 07:55:20.976303 140357523867456 retrain.py:1101] 2020-06-14 07:55:20.976115: Step 100: Validation accuracy = 82.0% (N=100)
I0614 07:55:21.476745 140357523867456 retrain.py:1080] 2020-06-14 07:55:21.476580: Step 110: Train accuracy = 97.0%
I0614 07:55:21.477144 140357523867456 retrain.py:1082] 2020-06-14 07:55:21.477105: Step 110: Cross entropy = 0.071473
I0614 07:55:21.534721 140357523867456 retrain.py:1101] 2020-06-14 07:55:21.534634: Step 110: Validation accuracy = 81.0% (N=100)
I0614 07:55:21.988913 140357523867456 retrain.py:1080] 2020-06-14 07:55:21.988823: Step 120: Train accuracy = 99.0%
I0614 07:55:21.989119 140357523867456 retrain.py:1082] 2020-06-14 07:55:21.989105: Step 120: Cross entropy = 0.062785
I0614 07:55:22.031925 140357523867456 retrain.py:1101] 2020-06-14 07:55:22.031838: Step 120: Validation accuracy = 75.0% (N=100)
I0614 07:55:22.485476 140357523867456 retrain.py:1080] 2020-06-14 07:55:22.485370: Step 130: Train accuracy = 97.0%
I0614 07:55:22.486104 140357523867456 retrain.py:1082] 2020-06-14 07:55:22.486082: Step 130: Cross entropy = 0.054888
I0614 07:55:22.529700 140357523867456 retrain.py:1101] 2020-06-14 07:55:22.529611: Step 130: Validation accuracy = 68.0% (N=100)
I0614 07:55:23.014080 140357523867456 retrain.py:1080] 2020-06-14 07:55:23.013992: Step 140: Train accuracy = 97.0%
I0614 07:55:23.014286 140357523867456 retrain.py:1082] 2020-06-14 07:55:23.014274: Step 140: Cross entropy = 0.061516
I0614 07:55:23.056553 140357523867456 retrain.py:1101] 2020-06-14 07:55:23.056468: Step 140: Validation accuracy = 77.0% (N=100)
I0614 07:55:23.507992 140357523867456 retrain.py:1080] 2020-06-14 07:55:23.507903: Step 150: Train accuracy = 97.0%
I0614 07:55:23.508197 140357523867456 retrain.py:1082] 2020-06-14 07:55:23.508183: Step 150: Cross entropy = 0.083399
I0614 07:55:23.548787 140357523867456 retrain.py:1101] 2020-06-14 07:55:23.548704: Step 150: Validation accuracy = 82.0% (N=100)
I0614 07:55:23.994833 140357523867456 retrain.py:1080] 2020-06-14 07:55:23.994690: Step 160: Train accuracy = 93.0%
I0614 07:55:23.995169 140357523867456 retrain.py:1082] 2020-06-14 07:55:23.995133: Step 160: Cross entropy = 0.102421
I0614 07:55:24.074055 140357523867456 retrain.py:1101] 2020-06-14 07:55:24.073972: Step 160: Validation accuracy = 76.0% (N=100)
I0614 07:55:24.588556 140357523867456 retrain.py:1080] 2020-06-14 07:55:24.588462: Step 170: Train accuracy = 97.0%
I0614 07:55:24.588765 140357523867456 retrain.py:1082] 2020-06-14 07:55:24.588752: Step 170: Cross entropy = 0.064364
I0614 07:55:24.632447 140357523867456 retrain.py:1101] 2020-06-14 07:55:24.632363: Step 170: Validation accuracy = 85.0% (N=100)
I0614 07:55:25.108036 140357523867456 retrain.py:1080] 2020-06-14 07:55:25.107922: Step 180: Train accuracy = 94.0%
I0614 07:55:25.108295 140357523867456 retrain.py:1082] 2020-06-14 07:55:25.108273: Step 180: Cross entropy = 0.109157
I0614 07:55:25.154907 140357523867456 retrain.py:1101] 2020-06-14 07:55:25.154823: Step 180: Validation accuracy = 77.0% (N=100)
I0614 07:55:25.616721 140357523867456 retrain.py:1080] 2020-06-14 07:55:25.616536: Step 190: Train accuracy = 98.0%
I0614 07:55:25.617208 140357523867456 retrain.py:1082] 2020-06-14 07:55:25.617152: Step 190: Cross entropy = 0.061230
I0614 07:55:25.674202 140357523867456 retrain.py:1101] 2020-06-14 07:55:25.674118: Step 190: Validation accuracy = 81.0% (N=100)
I0614 07:55:26.142191 140357523867456 retrain.py:1080] 2020-06-14 07:55:26.142084: Step 200: Train accuracy = 94.0%
I0614 07:55:26.142411 140357523867456 retrain.py:1082] 2020-06-14 07:55:26.142397: Step 200: Cross entropy = 0.097711
I0614 07:55:26.186152 140357523867456 retrain.py:1101] 2020-06-14 07:55:26.186066: Step 200: Validation accuracy = 82.0% (N=100)
I0614 07:55:26.671284 140357523867456 retrain.py:1080] 2020-06-14 07:55:26.671190: Step 210: Train accuracy = 96.0%
I0614 07:55:26.671492 140357523867456 retrain.py:1082] 2020-06-14 07:55:26.671478: Step 210: Cross entropy = 0.085403
I0614 07:55:26.715393 140357523867456 retrain.py:1101] 2020-06-14 07:55:26.715307: Step 210: Validation accuracy = 67.0% (N=100)
I0614 07:55:27.188749 140357523867456 retrain.py:1080] 2020-06-14 07:55:27.188649: Step 220: Train accuracy = 96.0%
I0614 07:55:27.188976 140357523867456 retrain.py:1082] 2020-06-14 07:55:27.188961: Step 220: Cross entropy = 0.081821
I0614 07:55:27.234425 140357523867456 retrain.py:1101] 2020-06-14 07:55:27.234340: Step 220: Validation accuracy = 85.0% (N=100)
I0614 07:55:27.682130 140357523867456 retrain.py:1080] 2020-06-14 07:55:27.681987: Step 230: Train accuracy = 93.0%
I0614 07:55:27.682499 140357523867456 retrain.py:1082] 2020-06-14 07:55:27.682455: Step 230: Cross entropy = 0.120374
I0614 07:55:27.740741 140357523867456 retrain.py:1101] 2020-06-14 07:55:27.740638: Step 230: Validation accuracy = 79.0% (N=100)
I0614 07:55:28.187597 140357523867456 retrain.py:1080] 2020-06-14 07:55:28.187474: Step 240: Train accuracy = 97.0%
I0614 07:55:28.187887 140357523867456 retrain.py:1082] 2020-06-14 07:55:28.187861: Step 240: Cross entropy = 0.066833
I0614 07:55:28.238906 140357523867456 retrain.py:1101] 2020-06-14 07:55:28.238764: Step 240: Validation accuracy = 85.0% (N=100)
I0614 07:55:28.702658 140357523867456 retrain.py:1080] 2020-06-14 07:55:28.702429: Step 250: Train accuracy = 95.0%
I0614 07:55:28.703250 140357523867456 retrain.py:1082] 2020-06-14 07:55:28.703187: Step 250: Cross entropy = 0.103323
I0614 07:55:28.747930 140357523867456 retrain.py:1101] 2020-06-14 07:55:28.747840: Step 250: Validation accuracy = 92.0% (N=100)
I0614 07:55:29.212214 140357523867456 retrain.py:1080] 2020-06-14 07:55:29.212113: Step 260: Train accuracy = 94.0%
I0614 07:55:29.212424 140357523867456 retrain.py:1082] 2020-06-14 07:55:29.212410: Step 260: Cross entropy = 0.078424
I0614 07:55:29.262044 140357523867456 retrain.py:1101] 2020-06-14 07:55:29.261697: Step 260: Validation accuracy = 76.0% (N=100)
I0614 07:55:29.731957 140357523867456 retrain.py:1080] 2020-06-14 07:55:29.731869: Step 270: Train accuracy = 96.0%
I0614 07:55:29.732165 140357523867456 retrain.py:1082] 2020-06-14 07:55:29.732150: Step 270: Cross entropy = 0.089976
I0614 07:55:29.775301 140357523867456 retrain.py:1101] 2020-06-14 07:55:29.775225: Step 270: Validation accuracy = 80.0% (N=100)
I0614 07:55:30.250412 140357523867456 retrain.py:1080] 2020-06-14 07:55:30.250324: Step 280: Train accuracy = 97.0%
I0614 07:55:30.250605 140357523867456 retrain.py:1082] 2020-06-14 07:55:30.250592: Step 280: Cross entropy = 0.062781
I0614 07:55:30.295855 140357523867456 retrain.py:1101] 2020-06-14 07:55:30.295770: Step 280: Validation accuracy = 82.0% (N=100)
I0614 07:55:30.767272 140357523867456 retrain.py:1080] 2020-06-14 07:55:30.767183: Step 290: Train accuracy = 98.0%
I0614 07:55:30.767464 140357523867456 retrain.py:1082] 2020-06-14 07:55:30.767451: Step 290: Cross entropy = 0.068919
I0614 07:55:30.811649 140357523867456 retrain.py:1101] 2020-06-14 07:55:30.811569: Step 290: Validation accuracy = 71.0% (N=100)
I0614 07:55:31.294908 140357523867456 retrain.py:1080] 2020-06-14 07:55:31.294820: Step 300: Train accuracy = 98.0%
I0614 07:55:31.295114 140357523867456 retrain.py:1082] 2020-06-14 07:55:31.295102: Step 300: Cross entropy = 0.072360
I0614 07:55:31.339057 140357523867456 retrain.py:1101] 2020-06-14 07:55:31.338960: Step 300: Validation accuracy = 80.0% (N=100)
I0614 07:55:31.822580 140357523867456 retrain.py:1080] 2020-06-14 07:55:31.822309: Step 310: Train accuracy = 94.0%
I0614 07:55:31.823307 140357523867456 retrain.py:1082] 2020-06-14 07:55:31.823268: Step 310: Cross entropy = 0.097944
I0614 07:55:31.878807 140357523867456 retrain.py:1101] 2020-06-14 07:55:31.878724: Step 310: Validation accuracy = 71.0% (N=100)
I0614 07:55:32.360313 140357523867456 retrain.py:1080] 2020-06-14 07:55:32.360174: Step 320: Train accuracy = 95.0%
I0614 07:55:32.360632 140357523867456 retrain.py:1082] 2020-06-14 07:55:32.360598: Step 320: Cross entropy = 0.083427
I0614 07:55:32.416338 140357523867456 retrain.py:1101] 2020-06-14 07:55:32.416214: Step 320: Validation accuracy = 84.0% (N=100)
I0614 07:55:32.890932 140357523867456 retrain.py:1080] 2020-06-14 07:55:32.890848: Step 330: Train accuracy = 96.0%
I0614 07:55:32.891117 140357523867456 retrain.py:1082] 2020-06-14 07:55:32.891103: Step 330: Cross entropy = 0.098032
I0614 07:55:32.934486 140357523867456 retrain.py:1101] 2020-06-14 07:55:32.934410: Step 330: Validation accuracy = 83.0% (N=100)
I0614 07:55:33.414927 140357523867456 retrain.py:1080] 2020-06-14 07:55:33.414845: Step 340: Train accuracy = 97.0%
I0614 07:55:33.415109 140357523867456 retrain.py:1082] 2020-06-14 07:55:33.415095: Step 340: Cross entropy = 0.055253
I0614 07:55:33.459198 140357523867456 retrain.py:1101] 2020-06-14 07:55:33.459102: Step 340: Validation accuracy = 69.0% (N=100)
I0614 07:55:33.923052 140357523867456 retrain.py:1080] 2020-06-14 07:55:33.922953: Step 350: Train accuracy = 97.0%
I0614 07:55:33.923263 140357523867456 retrain.py:1082] 2020-06-14 07:55:33.923248: Step 350: Cross entropy = 0.062014
I0614 07:55:33.963988 140357523867456 retrain.py:1101] 2020-06-14 07:55:33.963899: Step 350: Validation accuracy = 78.0% (N=100)
I0614 07:55:34.450885 140357523867456 retrain.py:1080] 2020-06-14 07:55:34.450765: Step 360: Train accuracy = 95.0%
I0614 07:55:34.451181 140357523867456 retrain.py:1082] 2020-06-14 07:55:34.451134: Step 360: Cross entropy = 0.070212
I0614 07:55:34.503906 140357523867456 retrain.py:1101] 2020-06-14 07:55:34.503819: Step 360: Validation accuracy = 69.0% (N=100)
I0614 07:55:34.972714 140357523867456 retrain.py:1080] 2020-06-14 07:55:34.972628: Step 370: Train accuracy = 99.0%
I0614 07:55:34.972911 140357523867456 retrain.py:1082] 2020-06-14 07:55:34.972897: Step 370: Cross entropy = 0.049138
I0614 07:55:35.018456 140357523867456 retrain.py:1101] 2020-06-14 07:55:35.018367: Step 370: Validation accuracy = 67.0% (N=100)
I0614 07:55:35.485971 140357523867456 retrain.py:1080] 2020-06-14 07:55:35.485873: Step 380: Train accuracy = 97.0%
I0614 07:55:35.486175 140357523867456 retrain.py:1082] 2020-06-14 07:55:35.486161: Step 380: Cross entropy = 0.067556
I0614 07:55:35.526513 140357523867456 retrain.py:1101] 2020-06-14 07:55:35.526431: Step 380: Validation accuracy = 67.0% (N=100)
I0614 07:55:35.964057 140357523867456 retrain.py:1080] 2020-06-14 07:55:35.963913: Step 390: Train accuracy = 95.0%
I0614 07:55:35.964388 140357523867456 retrain.py:1082] 2020-06-14 07:55:35.964353: Step 390: Cross entropy = 0.076547
I0614 07:55:36.019337 140357523867456 retrain.py:1101] 2020-06-14 07:55:36.019240: Step 390: Validation accuracy = 78.0% (N=100)
I0614 07:55:36.515355 140357523867456 retrain.py:1080] 2020-06-14 07:55:36.515272: Step 400: Train accuracy = 96.0%
I0614 07:55:36.515539 140357523867456 retrain.py:1082] 2020-06-14 07:55:36.515526: Step 400: Cross entropy = 0.069288
I0614 07:55:36.562035 140357523867456 retrain.py:1101] 2020-06-14 07:55:36.561897: Step 400: Validation accuracy = 80.0% (N=100)
I0614 07:55:37.043404 140357523867456 retrain.py:1080] 2020-06-14 07:55:37.043276: Step 410: Train accuracy = 96.0%
I0614 07:55:37.043742 140357523867456 retrain.py:1082] 2020-06-14 07:55:37.043707: Step 410: Cross entropy = 0.076912
I0614 07:55:37.093044 140357523867456 retrain.py:1101] 2020-06-14 07:55:37.092965: Step 410: Validation accuracy = 75.0% (N=100)
I0614 07:55:37.573803 140357523867456 retrain.py:1080] 2020-06-14 07:55:37.573718: Step 420: Train accuracy = 96.0%
I0614 07:55:37.573995 140357523867456 retrain.py:1082] 2020-06-14 07:55:37.573981: Step 420: Cross entropy = 0.092222
I0614 07:55:37.615643 140357523867456 retrain.py:1101] 2020-06-14 07:55:37.615563: Step 420: Validation accuracy = 81.0% (N=100)
I0614 07:55:38.077439 140357523867456 retrain.py:1080] 2020-06-14 07:55:38.077291: Step 430: Train accuracy = 95.0%
I0614 07:55:38.077764 140357523867456 retrain.py:1082] 2020-06-14 07:55:38.077730: Step 430: Cross entropy = 0.071161
I0614 07:55:38.134908 140357523867456 retrain.py:1101] 2020-06-14 07:55:38.134779: Step 430: Validation accuracy = 74.0% (N=100)
I0614 07:55:38.604614 140357523867456 retrain.py:1080] 2020-06-14 07:55:38.604521: Step 440: Train accuracy = 97.0%
I0614 07:55:38.605117 140357523867456 retrain.py:1082] 2020-06-14 07:55:38.605099: Step 440: Cross entropy = 0.054943
I0614 07:55:38.650195 140357523867456 retrain.py:1101] 2020-06-14 07:55:38.650115: Step 440: Validation accuracy = 88.0% (N=100)
I0614 07:55:39.175611 140357523867456 retrain.py:1080] 2020-06-14 07:55:39.175527: Step 450: Train accuracy = 99.0%
I0614 07:55:39.175903 140357523867456 retrain.py:1082] 2020-06-14 07:55:39.175862: Step 450: Cross entropy = 0.032578
I0614 07:55:39.220081 140357523867456 retrain.py:1101] 2020-06-14 07:55:39.219995: Step 450: Validation accuracy = 69.0% (N=100)
I0614 07:55:39.713716 140357523867456 retrain.py:1080] 2020-06-14 07:55:39.713631: Step 460: Train accuracy = 96.0%
I0614 07:55:39.713901 140357523867456 retrain.py:1082] 2020-06-14 07:55:39.713888: Step 460: Cross entropy = 0.092352
I0614 07:55:39.760397 140357523867456 retrain.py:1101] 2020-06-14 07:55:39.760308: Step 460: Validation accuracy = 78.0% (N=100)
I0614 07:55:40.236174 140357523867456 retrain.py:1080] 2020-06-14 07:55:40.236017: Step 470: Train accuracy = 95.0%
I0614 07:55:40.236500 140357523867456 retrain.py:1082] 2020-06-14 07:55:40.236463: Step 470: Cross entropy = 0.068831
I0614 07:55:40.297736 140357523867456 retrain.py:1101] 2020-06-14 07:55:40.297636: Step 470: Validation accuracy = 69.0% (N=100)
I0614 07:55:40.820526 140357523867456 retrain.py:1080] 2020-06-14 07:55:40.820384: Step 480: Train accuracy = 99.0%
I0614 07:55:40.820845 140357523867456 retrain.py:1082] 2020-06-14 07:55:40.820812: Step 480: Cross entropy = 0.031851
I0614 07:55:40.878304 140357523867456 retrain.py:1101] 2020-06-14 07:55:40.878079: Step 480: Validation accuracy = 74.0% (N=100)
I0614 07:55:41.366008 140357523867456 retrain.py:1080] 2020-06-14 07:55:41.365910: Step 490: Train accuracy = 94.0%
I0614 07:55:41.366227 140357523867456 retrain.py:1082] 2020-06-14 07:55:41.366209: Step 490: Cross entropy = 0.069980
I0614 07:55:41.413310 140357523867456 retrain.py:1101] 2020-06-14 07:55:41.413236: Step 490: Validation accuracy = 75.0% (N=100)
I0614 07:55:41.906420 140357523867456 retrain.py:1080] 2020-06-14 07:55:41.906285: Step 500: Train accuracy = 98.0%
I0614 07:55:41.906726 140357523867456 retrain.py:1082] 2020-06-14 07:55:41.906693: Step 500: Cross entropy = 0.060492
I0614 07:55:41.965458 140357523867456 retrain.py:1101] 2020-06-14 07:55:41.965373: Step 500: Validation accuracy = 70.0% (N=100)
I0614 07:55:42.445142 140357523867456 retrain.py:1080] 2020-06-14 07:55:42.444897: Step 510: Train accuracy = 99.0%
I0614 07:55:42.445620 140357523867456 retrain.py:1082] 2020-06-14 07:55:42.445602: Step 510: Cross entropy = 0.039169
I0614 07:55:42.486373 140357523867456 retrain.py:1101] 2020-06-14 07:55:42.486295: Step 510: Validation accuracy = 75.0% (N=100)
I0614 07:55:42.957924 140357523867456 retrain.py:1080] 2020-06-14 07:55:42.957735: Step 520: Train accuracy = 98.0%
I0614 07:55:42.958281 140357523867456 retrain.py:1082] 2020-06-14 07:55:42.958239: Step 520: Cross entropy = 0.070929
I0614 07:55:43.015842 140357523867456 retrain.py:1101] 2020-06-14 07:55:43.015755: Step 520: Validation accuracy = 78.0% (N=100)
I0614 07:55:43.488861 140357523867456 retrain.py:1080] 2020-06-14 07:55:43.488734: Step 530: Train accuracy = 96.0%
I0614 07:55:43.489156 140357523867456 retrain.py:1082] 2020-06-14 07:55:43.489128: Step 530: Cross entropy = 0.088174
I0614 07:55:43.541632 140357523867456 retrain.py:1101] 2020-06-14 07:55:43.541456: Step 530: Validation accuracy = 67.0% (N=100)
I0614 07:55:44.024120 140357523867456 retrain.py:1080] 2020-06-14 07:55:44.024017: Step 540: Train accuracy = 97.0%
I0614 07:55:44.024352 140357523867456 retrain.py:1082] 2020-06-14 07:55:44.024337: Step 540: Cross entropy = 0.058491
I0614 07:55:44.068055 140357523867456 retrain.py:1101] 2020-06-14 07:55:44.067973: Step 540: Validation accuracy = 77.0% (N=100)
I0614 07:55:44.588339 140357523867456 retrain.py:1080] 2020-06-14 07:55:44.588253: Step 550: Train accuracy = 95.0%
I0614 07:55:44.588523 140357523867456 retrain.py:1082] 2020-06-14 07:55:44.588509: Step 550: Cross entropy = 0.091497
I0614 07:55:44.631899 140357523867456 retrain.py:1101] 2020-06-14 07:55:44.631821: Step 550: Validation accuracy = 78.0% (N=100)
I0614 07:55:45.104015 140357523867456 retrain.py:1080] 2020-06-14 07:55:45.103934: Step 560: Train accuracy = 93.0%
I0614 07:55:45.104194 140357523867456 retrain.py:1082] 2020-06-14 07:55:45.104181: Step 560: Cross entropy = 0.102351
I0614 07:55:45.147495 140357523867456 retrain.py:1101] 2020-06-14 07:55:45.147419: Step 560: Validation accuracy = 67.0% (N=100)
I0614 07:55:45.604477 140357523867456 retrain.py:1080] 2020-06-14 07:55:45.604303: Step 570: Train accuracy = 95.0%
I0614 07:55:45.604879 140357523867456 retrain.py:1082] 2020-06-14 07:55:45.604844: Step 570: Cross entropy = 0.068329
I0614 07:55:45.661913 140357523867456 retrain.py:1101] 2020-06-14 07:55:45.661831: Step 570: Validation accuracy = 74.0% (N=100)
I0614 07:55:46.161352 140357523867456 retrain.py:1080] 2020-06-14 07:55:46.161249: Step 580: Train accuracy = 97.0%
I0614 07:55:46.161594 140357523867456 retrain.py:1082] 2020-06-14 07:55:46.161574: Step 580: Cross entropy = 0.066805
I0614 07:55:46.202327 140357523867456 retrain.py:1101] 2020-06-14 07:55:46.202198: Step 580: Validation accuracy = 74.0% (N=100)
I0614 07:55:46.685073 140357523867456 retrain.py:1080] 2020-06-14 07:55:46.684987: Step 590: Train accuracy = 97.0%
I0614 07:55:46.685272 140357523867456 retrain.py:1082] 2020-06-14 07:55:46.685258: Step 590: Cross entropy = 0.046861
I0614 07:55:46.729339 140357523867456 retrain.py:1101] 2020-06-14 07:55:46.729260: Step 590: Validation accuracy = 76.0% (N=100)
I0614 07:55:47.219181 140357523867456 retrain.py:1080] 2020-06-14 07:55:47.219043: Step 600: Train accuracy = 94.0%
I0614 07:55:47.219545 140357523867456 retrain.py:1082] 2020-06-14 07:55:47.219510: Step 600: Cross entropy = 0.078029
I0614 07:55:47.276418 140357523867456 retrain.py:1101] 2020-06-14 07:55:47.276260: Step 600: Validation accuracy = 74.0% (N=100)
I0614 07:55:47.749582 140357523867456 retrain.py:1080] 2020-06-14 07:55:47.749496: Step 610: Train accuracy = 96.0%
I0614 07:55:47.749781 140357523867456 retrain.py:1082] 2020-06-14 07:55:47.749761: Step 610: Cross entropy = 0.085063
I0614 07:55:47.796014 140357523867456 retrain.py:1101] 2020-06-14 07:55:47.795929: Step 610: Validation accuracy = 76.0% (N=100)
I0614 07:55:48.310294 140357523867456 retrain.py:1080] 2020-06-14 07:55:48.310161: Step 620: Train accuracy = 96.0%
I0614 07:55:48.310609 140357523867456 retrain.py:1082] 2020-06-14 07:55:48.310576: Step 620: Cross entropy = 0.077996
I0614 07:55:48.372647 140357523867456 retrain.py:1101] 2020-06-14 07:55:48.372493: Step 620: Validation accuracy = 73.0% (N=100)
I0614 07:55:48.874374 140357523867456 retrain.py:1080] 2020-06-14 07:55:48.874265: Step 630: Train accuracy = 97.0%
I0614 07:55:48.874639 140357523867456 retrain.py:1082] 2020-06-14 07:55:48.874617: Step 630: Cross entropy = 0.058069
I0614 07:55:48.919998 140357523867456 retrain.py:1101] 2020-06-14 07:55:48.919863: Step 630: Validation accuracy = 84.0% (N=100)
I0614 07:55:49.407447 140357523867456 retrain.py:1080] 2020-06-14 07:55:49.407340: Step 640: Train accuracy = 96.0%
I0614 07:55:49.407656 140357523867456 retrain.py:1082] 2020-06-14 07:55:49.407644: Step 640: Cross entropy = 0.076298
I0614 07:55:49.466304 140357523867456 retrain.py:1101] 2020-06-14 07:55:49.466212: Step 640: Validation accuracy = 76.0% (N=100)
I0614 07:55:49.940754 140357523867456 retrain.py:1080] 2020-06-14 07:55:49.940667: Step 650: Train accuracy = 94.0%
I0614 07:55:49.940949 140357523867456 retrain.py:1082] 2020-06-14 07:55:49.940932: Step 650: Cross entropy = 0.075164
I0614 07:55:49.987224 140357523867456 retrain.py:1101] 2020-06-14 07:55:49.987145: Step 650: Validation accuracy = 72.0% (N=100)
I0614 07:55:50.460159 140357523867456 retrain.py:1080] 2020-06-14 07:55:50.460062: Step 660: Train accuracy = 92.0%
I0614 07:55:50.460365 140357523867456 retrain.py:1082] 2020-06-14 07:55:50.460347: Step 660: Cross entropy = 0.121114
I0614 07:55:50.504097 140357523867456 retrain.py:1101] 2020-06-14 07:55:50.504016: Step 660: Validation accuracy = 68.0% (N=100)
I0614 07:55:51.005509 140357523867456 retrain.py:1080] 2020-06-14 07:55:51.005362: Step 670: Train accuracy = 95.0%
I0614 07:55:51.005818 140357523867456 retrain.py:1082] 2020-06-14 07:55:51.005788: Step 670: Cross entropy = 0.096767
I0614 07:55:51.062502 140357523867456 retrain.py:1101] 2020-06-14 07:55:51.062317: Step 670: Validation accuracy = 74.0% (N=100)
I0614 07:55:51.542927 140357523867456 retrain.py:1080] 2020-06-14 07:55:51.542833: Step 680: Train accuracy = 98.0%
I0614 07:55:51.543122 140357523867456 retrain.py:1082] 2020-06-14 07:55:51.543108: Step 680: Cross entropy = 0.076869
I0614 07:55:51.586038 140357523867456 retrain.py:1101] 2020-06-14 07:55:51.585958: Step 680: Validation accuracy = 84.0% (N=100)
I0614 07:55:52.060893 140357523867456 retrain.py:1080] 2020-06-14 07:55:52.060751: Step 690: Train accuracy = 95.0%
I0614 07:55:52.061220 140357523867456 retrain.py:1082] 2020-06-14 07:55:52.061186: Step 690: Cross entropy = 0.073479
I0614 07:55:52.117313 140357523867456 retrain.py:1101] 2020-06-14 07:55:52.117234: Step 690: Validation accuracy = 76.0% (N=100)
I0614 07:55:52.610521 140357523867456 retrain.py:1080] 2020-06-14 07:55:52.610442: Step 700: Train accuracy = 96.0%
I0614 07:55:52.610701 140357523867456 retrain.py:1082] 2020-06-14 07:55:52.610688: Step 700: Cross entropy = 0.066338
I0614 07:55:52.649185 140357523867456 retrain.py:1101] 2020-06-14 07:55:52.649109: Step 700: Validation accuracy = 68.0% (N=100)
I0614 07:55:53.139234 140357523867456 retrain.py:1080] 2020-06-14 07:55:53.139087: Step 710: Train accuracy = 96.0%
I0614 07:55:53.139557 140357523867456 retrain.py:1082] 2020-06-14 07:55:53.139524: Step 710: Cross entropy = 0.076425
I0614 07:55:53.198215 140357523867456 retrain.py:1101] 2020-06-14 07:55:53.198074: Step 710: Validation accuracy = 69.0% (N=100)
I0614 07:55:53.693712 140357523867456 retrain.py:1080] 2020-06-14 07:55:53.693581: Step 720: Train accuracy = 94.0%
I0614 07:55:53.694030 140357523867456 retrain.py:1082] 2020-06-14 07:55:53.693990: Step 720: Cross entropy = 0.104667
I0614 07:55:53.758138 140357523867456 retrain.py:1101] 2020-06-14 07:55:53.757986: Step 720: Validation accuracy = 75.0% (N=100)
I0614 07:55:54.226587 140357523867456 retrain.py:1080] 2020-06-14 07:55:54.226503: Step 730: Train accuracy = 93.0%
I0614 07:55:54.226767 140357523867456 retrain.py:1082] 2020-06-14 07:55:54.226754: Step 730: Cross entropy = 0.101537
I0614 07:55:54.269384 140357523867456 retrain.py:1101] 2020-06-14 07:55:54.269303: Step 730: Validation accuracy = 78.0% (N=100)
I0614 07:55:54.788688 140357523867456 retrain.py:1080] 2020-06-14 07:55:54.788518: Step 740: Train accuracy = 99.0%
I0614 07:55:54.789048 140357523867456 retrain.py:1082] 2020-06-14 07:55:54.789034: Step 740: Cross entropy = 0.027563
I0614 07:55:54.833823 140357523867456 retrain.py:1101] 2020-06-14 07:55:54.833750: Step 740: Validation accuracy = 82.0% (N=100)
I0614 07:55:55.348797 140357523867456 retrain.py:1080] 2020-06-14 07:55:55.348712: Step 750: Train accuracy = 95.0%
I0614 07:55:55.349270 140357523867456 retrain.py:1082] 2020-06-14 07:55:55.349251: Step 750: Cross entropy = 0.085659
I0614 07:55:55.399405 140357523867456 retrain.py:1101] 2020-06-14 07:55:55.399065: Step 750: Validation accuracy = 80.0% (N=100)
I0614 07:55:55.904400 140357523867456 retrain.py:1080] 2020-06-14 07:55:55.904290: Step 760: Train accuracy = 98.0%
I0614 07:55:55.904629 140357523867456 retrain.py:1082] 2020-06-14 07:55:55.904615: Step 760: Cross entropy = 0.064675
I0614 07:55:55.947148 140357523867456 retrain.py:1101] 2020-06-14 07:55:55.947018: Step 760: Validation accuracy = 82.0% (N=100)
I0614 07:55:56.453903 140357523867456 retrain.py:1080] 2020-06-14 07:55:56.453817: Step 770: Train accuracy = 94.0%
I0614 07:55:56.454080 140357523867456 retrain.py:1082] 2020-06-14 07:55:56.454066: Step 770: Cross entropy = 0.084838
I0614 07:55:56.495736 140357523867456 retrain.py:1101] 2020-06-14 07:55:56.495583: Step 770: Validation accuracy = 80.0% (N=100)
I0614 07:55:56.990719 140357523867456 retrain.py:1080] 2020-06-14 07:55:56.990545: Step 780: Train accuracy = 93.0%
I0614 07:55:56.991075 140357523867456 retrain.py:1082] 2020-06-14 07:55:56.991060: Step 780: Cross entropy = 0.087982
I0614 07:55:57.033932 140357523867456 retrain.py:1101] 2020-06-14 07:55:57.033859: Step 780: Validation accuracy = 66.0% (N=100)
I0614 07:55:57.498322 140357523867456 retrain.py:1080] 2020-06-14 07:55:57.498179: Step 790: Train accuracy = 97.0%
I0614 07:55:57.498657 140357523867456 retrain.py:1082] 2020-06-14 07:55:57.498614: Step 790: Cross entropy = 0.068899
I0614 07:55:57.557897 140357523867456 retrain.py:1101] 2020-06-14 07:55:57.557754: Step 790: Validation accuracy = 74.0% (N=100)
I0614 07:55:58.096480 140357523867456 retrain.py:1080] 2020-06-14 07:55:58.096317: Step 800: Train accuracy = 95.0%
I0614 07:55:58.096811 140357523867456 retrain.py:1082] 2020-06-14 07:55:58.096797: Step 800: Cross entropy = 0.072437
I0614 07:55:58.146795 140357523867456 retrain.py:1101] 2020-06-14 07:55:58.146633: Step 800: Validation accuracy = 77.0% (N=100)
I0614 07:55:58.694468 140357523867456 retrain.py:1080] 2020-06-14 07:55:58.694385: Step 810: Train accuracy = 95.0%
I0614 07:55:58.694649 140357523867456 retrain.py:1082] 2020-06-14 07:55:58.694636: Step 810: Cross entropy = 0.080181
I0614 07:55:58.735134 140357523867456 retrain.py:1101] 2020-06-14 07:55:58.735057: Step 810: Validation accuracy = 75.0% (N=100)
I0614 07:55:59.226022 140357523867456 retrain.py:1080] 2020-06-14 07:55:59.225934: Step 820: Train accuracy = 97.0%
I0614 07:55:59.226201 140357523867456 retrain.py:1082] 2020-06-14 07:55:59.226187: Step 820: Cross entropy = 0.039124
I0614 07:55:59.268155 140357523867456 retrain.py:1101] 2020-06-14 07:55:59.268077: Step 820: Validation accuracy = 67.0% (N=100)
I0614 07:55:59.741673 140357523867456 retrain.py:1080] 2020-06-14 07:55:59.741368: Step 830: Train accuracy = 95.0%
I0614 07:55:59.742322 140357523867456 retrain.py:1082] 2020-06-14 07:55:59.742288: Step 830: Cross entropy = 0.072849
I0614 07:55:59.798467 140357523867456 retrain.py:1101] 2020-06-14 07:55:59.798377: Step 830: Validation accuracy = 73.0% (N=100)
I0614 07:56:00.246452 140357523867456 retrain.py:1080] 2020-06-14 07:56:00.246349: Step 840: Train accuracy = 97.0%
I0614 07:56:00.246673 140357523867456 retrain.py:1082] 2020-06-14 07:56:00.246659: Step 840: Cross entropy = 0.056413
I0614 07:56:00.287376 140357523867456 retrain.py:1101] 2020-06-14 07:56:00.287296: Step 840: Validation accuracy = 77.0% (N=100)
I0614 07:56:00.749724 140357523867456 retrain.py:1080] 2020-06-14 07:56:00.749641: Step 850: Train accuracy = 96.0%
I0614 07:56:00.749902 140357523867456 retrain.py:1082] 2020-06-14 07:56:00.749889: Step 850: Cross entropy = 0.077028
I0614 07:56:00.794606 140357523867456 retrain.py:1101] 2020-06-14 07:56:00.794481: Step 850: Validation accuracy = 77.0% (N=100)
I0614 07:56:01.311154 140357523867456 retrain.py:1080] 2020-06-14 07:56:01.311000: Step 860: Train accuracy = 98.0%
I0614 07:56:01.311477 140357523867456 retrain.py:1082] 2020-06-14 07:56:01.311462: Step 860: Cross entropy = 0.052564
I0614 07:56:01.355657 140357523867456 retrain.py:1101] 2020-06-14 07:56:01.355582: Step 860: Validation accuracy = 80.0% (N=100)
I0614 07:56:01.820898 140357523867456 retrain.py:1080] 2020-06-14 07:56:01.820795: Step 870: Train accuracy = 95.0%
I0614 07:56:01.821120 140357523867456 retrain.py:1082] 2020-06-14 07:56:01.821107: Step 870: Cross entropy = 0.066704
I0614 07:56:01.863995 140357523867456 retrain.py:1101] 2020-06-14 07:56:01.863912: Step 870: Validation accuracy = 76.0% (N=100)
I0614 07:56:02.342440 140357523867456 retrain.py:1080] 2020-06-14 07:56:02.342353: Step 880: Train accuracy = 95.0%
I0614 07:56:02.342624 140357523867456 retrain.py:1082] 2020-06-14 07:56:02.342611: Step 880: Cross entropy = 0.079014
I0614 07:56:02.386094 140357523867456 retrain.py:1101] 2020-06-14 07:56:02.386014: Step 880: Validation accuracy = 84.0% (N=100)
I0614 07:56:02.920564 140357523867456 retrain.py:1080] 2020-06-14 07:56:02.920405: Step 890: Train accuracy = 96.0%
I0614 07:56:02.920894 140357523867456 retrain.py:1082] 2020-06-14 07:56:02.920858: Step 890: Cross entropy = 0.102833
I0614 07:56:02.981263 140357523867456 retrain.py:1101] 2020-06-14 07:56:02.981147: Step 890: Validation accuracy = 71.0% (N=100)
I0614 07:56:03.497393 140357523867456 retrain.py:1080] 2020-06-14 07:56:03.497043: Step 900: Train accuracy = 97.0%
I0614 07:56:03.498084 140357523867456 retrain.py:1082] 2020-06-14 07:56:03.498043: Step 900: Cross entropy = 0.070407
I0614 07:56:03.557514 140357523867456 retrain.py:1101] 2020-06-14 07:56:03.557407: Step 900: Validation accuracy = 80.0% (N=100)
I0614 07:56:04.081575 140357523867456 retrain.py:1080] 2020-06-14 07:56:04.081441: Step 910: Train accuracy = 95.0%
I0614 07:56:04.081860 140357523867456 retrain.py:1082] 2020-06-14 07:56:04.081841: Step 910: Cross entropy = 0.066559
I0614 07:56:04.129820 140357523867456 retrain.py:1101] 2020-06-14 07:56:04.129743: Step 910: Validation accuracy = 75.0% (N=100)
I0614 07:56:04.635214 140357523867456 retrain.py:1080] 2020-06-14 07:56:04.635123: Step 920: Train accuracy = 96.0%
I0614 07:56:04.635396 140357523867456 retrain.py:1082] 2020-06-14 07:56:04.635382: Step 920: Cross entropy = 0.065323
I0614 07:56:04.676817 140357523867456 retrain.py:1101] 2020-06-14 07:56:04.676733: Step 920: Validation accuracy = 69.0% (N=100)
I0614 07:56:05.146775 140357523867456 retrain.py:1080] 2020-06-14 07:56:05.146692: Step 930: Train accuracy = 97.0%
I0614 07:56:05.146976 140357523867456 retrain.py:1082] 2020-06-14 07:56:05.146951: Step 930: Cross entropy = 0.044690
I0614 07:56:05.187938 140357523867456 retrain.py:1101] 2020-06-14 07:56:05.187860: Step 930: Validation accuracy = 77.0% (N=100)
I0614 07:56:05.690162 140357523867456 retrain.py:1080] 2020-06-14 07:56:05.690081: Step 940: Train accuracy = 100.0%
I0614 07:56:05.690360 140357523867456 retrain.py:1082] 2020-06-14 07:56:05.690338: Step 940: Cross entropy = 0.044970
I0614 07:56:05.731916 140357523867456 retrain.py:1101] 2020-06-14 07:56:05.731841: Step 940: Validation accuracy = 76.0% (N=100)
I0614 07:56:06.224527 140357523867456 retrain.py:1080] 2020-06-14 07:56:06.224361: Step 950: Train accuracy = 97.0%
I0614 07:56:06.224853 140357523867456 retrain.py:1082] 2020-06-14 07:56:06.224838: Step 950: Cross entropy = 0.056652
I0614 07:56:06.269117 140357523867456 retrain.py:1101] 2020-06-14 07:56:06.269040: Step 950: Validation accuracy = 85.0% (N=100)
I0614 07:56:06.753410 140357523867456 retrain.py:1080] 2020-06-14 07:56:06.753319: Step 960: Train accuracy = 95.0%
I0614 07:56:06.753655 140357523867456 retrain.py:1082] 2020-06-14 07:56:06.753630: Step 960: Cross entropy = 0.069756
I0614 07:56:06.799989 140357523867456 retrain.py:1101] 2020-06-14 07:56:06.799908: Step 960: Validation accuracy = 79.0% (N=100)
I0614 07:56:07.278869 140357523867456 retrain.py:1080] 2020-06-14 07:56:07.278786: Step 970: Train accuracy = 98.0%
I0614 07:56:07.279050 140357523867456 retrain.py:1082] 2020-06-14 07:56:07.279037: Step 970: Cross entropy = 0.052502
I0614 07:56:07.324221 140357523867456 retrain.py:1101] 2020-06-14 07:56:07.324143: Step 970: Validation accuracy = 79.0% (N=100)
I0614 07:56:07.830533 140357523867456 retrain.py:1080] 2020-06-14 07:56:07.830453: Step 980: Train accuracy = 99.0%
I0614 07:56:07.830706 140357523867456 retrain.py:1082] 2020-06-14 07:56:07.830693: Step 980: Cross entropy = 0.051550
I0614 07:56:07.871151 140357523867456 retrain.py:1101] 2020-06-14 07:56:07.871073: Step 980: Validation accuracy = 77.0% (N=100)
I0614 07:56:08.402291 140357523867456 retrain.py:1080] 2020-06-14 07:56:08.402204: Step 990: Train accuracy = 99.0%
I0614 07:56:08.402470 140357523867456 retrain.py:1082] 2020-06-14 07:56:08.402456: Step 990: Cross entropy = 0.052002
I0614 07:56:08.443230 140357523867456 retrain.py:1101] 2020-06-14 07:56:08.443148: Step 990: Validation accuracy = 67.0% (N=100)
I0614 07:56:08.861620 140357523867456 retrain.py:1080] 2020-06-14 07:56:08.861461: Step 999: Train accuracy = 97.0%
I0614 07:56:08.861992 140357523867456 retrain.py:1082] 2020-06-14 07:56:08.861973: Step 999: Cross entropy = 0.062160
I0614 07:56:08.910188 140357523867456 retrain.py:1101] 2020-06-14 07:56:08.910110: Step 999: Validation accuracy = 75.0% (N=100)
2020-06-14 07:56:09.448962: W tensorflow/core/graph/graph_constructor.cc:1491] Importing a graph with a lower producer version 26 into an existing graph with producer version 134. Shape inference will have run different parts of the graph with different producer versions.
I0614 07:56:10.626909 140357523867456 saver.py:1503] Saver not created because there are no variables in the graph to restore
2020-06-14 07:56:10.754554: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1639] Found device 0 with properties: 
name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235
pciBusID: 0000:b2:00.0
2020-06-14 07:56:10.754632: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2020-06-14 07:56:10.754692: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
2020-06-14 07:56:10.754710: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10
2020-06-14 07:56:10.754724: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10
2020-06-14 07:56:10.754737: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10
2020-06-14 07:56:10.754760: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10
2020-06-14 07:56:10.754774: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2020-06-14 07:56:10.755576: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1767] Adding visible gpu devices: 0
2020-06-14 07:56:10.755626: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1180] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-06-14 07:56:10.755634: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1186]      0 
2020-06-14 07:56:10.755641: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1199] 0:   N 
2020-06-14 07:56:10.757047: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1325] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 10751 MB memory) -> physical GPU (device: 0, name: Tesla K80, pci bus id: 0000:b2:00.0, compute capability: 3.7)
I0614 07:56:10.940485 140357523867456 saver.py:1284] Restoring parameters from /tmp/_retrain_checkpoint
I0614 07:56:11.554468 140357523867456 retrain.py:856] Final test accuracy = 60.0% (N=5)
I0614 07:56:11.570792 140357523867456 retrain.py:1129] Save final result to : /tmp/output_graph.pb
2020-06-14 07:56:11.630360: W tensorflow/core/graph/graph_constructor.cc:1491] Importing a graph with a lower producer version 26 into an existing graph with producer version 134. Shape inference will have run different parts of the graph with different producer versions.
I0614 07:56:12.824378 140357523867456 saver.py:1503] Saver not created because there are no variables in the graph to restore
2020-06-14 07:56:12.940838: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1639] Found device 0 with properties: 
name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235
pciBusID: 0000:b2:00.0
2020-06-14 07:56:12.940915: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2020-06-14 07:56:12.940946: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
2020-06-14 07:56:12.940958: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10
2020-06-14 07:56:12.940968: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10
2020-06-14 07:56:12.940979: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10
2020-06-14 07:56:12.940990: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10
2020-06-14 07:56:12.941001: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2020-06-14 07:56:12.941787: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1767] Adding visible gpu devices: 0
2020-06-14 07:56:12.941820: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1180] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-06-14 07:56:12.941828: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1186]      0 
2020-06-14 07:56:12.941835: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1199] 0:   N 
2020-06-14 07:56:12.942663: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1325] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 10751 MB memory) -> physical GPU (device: 0, name: Tesla K80, pci bus id: 0000:b2:00.0, compute capability: 3.7)
I0614 07:56:13.129704 140357523867456 saver.py:1284] Restoring parameters from /tmp/_retrain_checkpoint
W0614 07:56:13.501985 140357523867456 deprecation.py:323] From /job/model-code/src/classification/retrain.py:906: convert_variables_to_constants (from tensorflow.python.framework.graph_util_impl) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.compat.v1.graph_util.convert_variables_to_constants`
W0614 07:56:13.502327 140357523867456 deprecation.py:323] From /opt/anaconda/envs/wmlce/lib/python3.6/site-packages/tensorflow_core/python/framework/graph_util_impl.py:277: extract_sub_graph (from tensorflow.python.framework.graph_util_impl) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.compat.v1.graph_util.extract_sub_graph`
I0614 07:56:13.864357 140357523867456 graph_util_impl.py:334] Froze 137 variables.
I0614 07:56:13.914496 140357523867456 graph_util_impl.py:394] Converted 137 variables to const ops.
2020-06-14 07:56:14.073577: W tensorflow/core/graph/graph_constructor.cc:1491] Importing a graph with a lower producer version 26 into an existing graph with producer version 134. Shape inference will have run different parts of the graph with different producer versions.
I0614 07:56:15.140187 140357523867456 saver.py:1503] Saver not created because there are no variables in the graph to restore
2020-06-14 07:56:15.253385: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1639] Found device 0 with properties: 
name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235
pciBusID: 0000:b2:00.0
2020-06-14 07:56:15.253449: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2020-06-14 07:56:15.253483: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
2020-06-14 07:56:15.253497: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10
2020-06-14 07:56:15.253508: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10
2020-06-14 07:56:15.253518: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10
2020-06-14 07:56:15.253530: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10
2020-06-14 07:56:15.253542: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2020-06-14 07:56:15.254339: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1767] Adding visible gpu devices: 0
2020-06-14 07:56:15.254387: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1180] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-06-14 07:56:15.254395: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1186]      0 
2020-06-14 07:56:15.254402: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1199] 0:   N 
2020-06-14 07:56:15.255250: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1325] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 10751 MB memory) -> physical GPU (device: 0, name: Tesla K80, pci bus id: 0000:b2:00.0, compute capability: 3.7)
I0614 07:56:15.455276 140357523867456 saver.py:1284] Restoring parameters from /tmp/_retrain_checkpoint
W0614 07:56:15.778071 140357523867456 module_wrapper.py:139] From /job/model-code/src/classification/retrain.py:963: The name tf.tables_initializer is deprecated. Please use tf.compat.v1.tables_initializer instead.

W0614 07:56:15.780173 140357523867456 deprecation.py:323] From /job/model-code/src/classification/retrain.py:963: simple_save (from tensorflow.python.saved_model.simple_save) is deprecated and will be removed in a future version.
Instructions for updating:
This function will only be available through the v1 compatibility library as tf.compat.v1.saved_model.simple_save.
W0614 07:56:15.780463 140357523867456 deprecation.py:323] From /opt/anaconda/envs/wmlce/lib/python3.6/site-packages/tensorflow_core/python/saved_model/signature_def_utils_impl.py:201: build_tensor_info (from tensorflow.python.saved_model.utils_impl) is deprecated and will be removed in a future version.
Instructions for updating:
This function will only be available through the v1 compatibility library as tf.compat.v1.saved_model.utils.build_tensor_info or tf.compat.v1.saved_model.build_tensor_info.
I0614 07:56:17.530907 140357523867456 builder_impl.py:665] Assets added to graph.
I0614 07:56:17.531650 140357523867456 builder_impl.py:460] No assets to write.
I0614 07:56:31.268359 140357523867456 builder_impl.py:425] SavedModel written to: /mnt/results/reverseoink/training-vt65LuiMR/model/saved_model.pb
CACLI-TRAINING-SUCCESS
2020-06-14 07:56:37.008016: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
WARNING: Logging before flag parsing goes to stderr.
W0614 07:56:38.710435 140631935227712 module_wrapper.py:139] From /job/model-code/src/convert/convert.py:12: The name tf.enable_eager_execution is deprecated. Please use tf.compat.v1.enable_eager_execution instead.

W0614 07:56:39.090363 140631935227712 __init__.py:74] TensorFlow version 1.15.2 detected. Last version known to be fully compatible is 1.14.0 .
W0614 07:56:39.121865 140631935227712 __init__.py:128] Keras version 2.2.5 detected. Last version known to be fully compatible of Keras is 2.2.4 .
W0614 07:56:39.173014 140631935227712 module_wrapper.py:139] From /job/model-code/src/convert/convert.py:86: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

2020-06-14 07:56:39.174094: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcuda.so.1
2020-06-14 07:56:41.599173: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1639] Found device 0 with properties: 
name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235
pciBusID: 0000:b2:00.0
2020-06-14 07:56:41.599239: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2020-06-14 07:56:41.602078: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
2020-06-14 07:56:41.604929: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10
2020-06-14 07:56:41.605289: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10
2020-06-14 07:56:41.607171: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10
2020-06-14 07:56:41.608358: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10
2020-06-14 07:56:41.612303: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2020-06-14 07:56:41.614128: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1767] Adding visible gpu devices: 0
2020-06-14 07:56:41.614525: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 AVX512F FMA
2020-06-14 07:56:41.652023: I tensorflow/core/platform/profile_utils/cpu_utils.cc:101] CPU Frequency: 2200000000 Hz
2020-06-14 07:56:41.657281: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x561bb7b8cea0 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-06-14 07:56:41.657399: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-06-14 07:56:41.659956: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1639] Found device 0 with properties: 
name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235
pciBusID: 0000:b2:00.0
2020-06-14 07:56:41.660051: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2020-06-14 07:56:41.660129: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
2020-06-14 07:56:41.660164: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10
2020-06-14 07:56:41.660195: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10
2020-06-14 07:56:41.660240: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10
2020-06-14 07:56:41.660274: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10
2020-06-14 07:56:41.660307: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2020-06-14 07:56:41.664391: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1767] Adding visible gpu devices: 0
2020-06-14 07:56:41.664502: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2020-06-14 07:56:42.097676: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1180] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-06-14 07:56:42.098039: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1186]      0 
2020-06-14 07:56:42.098077: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1199] 0:   N 
2020-06-14 07:56:42.101401: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1325] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 10751 MB memory) -> physical GPU (device: 0, name: Tesla K80, pci bus id: 0000:b2:00.0, compute capability: 3.7)
2020-06-14 07:56:42.104493: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x561bc406e610 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
2020-06-14 07:56:42.104540: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Tesla K80, Compute Capability 3.7
W0614 07:56:42.108255 140631935227712 deprecation.py:323] From /job/model-code/src/convert/convert.py:88: load (from tensorflow.python.saved_model.loader_impl) is deprecated and will be removed in a future version.
Instructions for updating:
This function will only be available through the v1 compatibility library as tf.compat.v1.saved_model.loader.load or tf.compat.v1.saved_model.load. There will be a new function for importing SavedModels in Tensorflow 2.0.
W0614 07:56:44.452535 140631935227712 module_wrapper.py:139] From /job/model-code/src/convert/convert.py:92: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

W0614 07:56:44.547743 140631935227712 deprecation.py:323] From /opt/anaconda/envs/wmlce/lib/python3.6/site-packages/tensorflow_core/python/tools/strip_unused_lib.py:88: extract_sub_graph (from tensorflow.python.framework.graph_util_impl) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.compat.v1.graph_util.extract_sub_graph`
W0614 07:56:44.627023 140631935227712 deprecation.py:323] From /job/model-code/src/convert/convert.py:99: convert_variables_to_constants (from tensorflow.python.framework.graph_util_impl) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.compat.v1.graph_util.convert_variables_to_constants`
2020-06-14 07:56:46.529689: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1639] Found device 0 with properties: 
name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235
pciBusID: 0000:b2:00.0
2020-06-14 07:56:46.529764: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2020-06-14 07:56:46.529810: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
2020-06-14 07:56:46.529825: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10
2020-06-14 07:56:46.529838: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10
2020-06-14 07:56:46.529852: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10
2020-06-14 07:56:46.529865: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10
2020-06-14 07:56:46.529885: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2020-06-14 07:56:46.530713: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1767] Adding visible gpu devices: 0
2020-06-14 07:56:46.530756: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1180] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-06-14 07:56:46.530766: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1186]      0 
2020-06-14 07:56:46.530775: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1199] 0:   N 
2020-06-14 07:56:46.531638: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1325] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 10751 MB memory) -> physical GPU (device: 0, name: Tesla K80, pci bus id: 0000:b2:00.0, compute capability: 3.7)
2020-06-14 07:56:49.305804: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1639] Found device 0 with properties: 
name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235
pciBusID: 0000:b2:00.0
2020-06-14 07:56:49.306307: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2020-06-14 07:56:49.306394: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
2020-06-14 07:56:49.306433: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10
2020-06-14 07:56:49.306469: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10
2020-06-14 07:56:49.306505: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10
2020-06-14 07:56:49.306542: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10
2020-06-14 07:56:49.306579: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2020-06-14 07:56:49.308296: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1767] Adding visible gpu devices: 0
2020-06-14 07:56:49.308371: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1180] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-06-14 07:56:49.308398: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1186]      0 
2020-06-14 07:56:49.308419: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1199] 0:   N 
2020-06-14 07:56:49.310178: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1325] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 10751 MB memory) -> physical GPU (device: 0, name: Tesla K80, pci bus id: 0000:b2:00.0, compute capability: 3.7)
2020-06-14 07:56:52.720921: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1639] Found device 0 with properties: 
name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235
pciBusID: 0000:b2:00.0
2020-06-14 07:56:52.721024: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2020-06-14 07:56:52.721101: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
2020-06-14 07:56:52.721138: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10
2020-06-14 07:56:52.721170: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10
2020-06-14 07:56:52.721202: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10
2020-06-14 07:56:52.721236: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10
2020-06-14 07:56:52.721269: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2020-06-14 07:56:52.723019: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1767] Adding visible gpu devices: 0
2020-06-14 07:56:52.723121: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1180] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-06-14 07:56:52.723162: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1186]      0 
2020-06-14 07:56:52.723192: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1199] 0:   N 
2020-06-14 07:56:52.725871: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1325] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 10751 MB memory) -> physical GPU (device: 0, name: Tesla K80, pci bus id: 0000:b2:00.0, compute capability: 3.7)
2020-06-14 07:56:58.362979: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1639] Found device 0 with properties: 
name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235
pciBusID: 0000:b2:00.0
2020-06-14 07:56:58.363359: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2020-06-14 07:56:58.363431: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
2020-06-14 07:56:58.363453: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10
2020-06-14 07:56:58.363473: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10
2020-06-14 07:56:58.363493: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10
2020-06-14 07:56:58.363513: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10
2020-06-14 07:56:58.363533: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2020-06-14 07:56:58.364718: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1767] Adding visible gpu devices: 0
2020-06-14 07:56:58.364769: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1180] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-06-14 07:56:58.364783: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1186]      0 
2020-06-14 07:56:58.364794: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1199] 0:   N 
2020-06-14 07:56:58.365903: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1325] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 10751 MB memory) -> physical GPU (device: 0, name: Tesla K80, pci bus id: 0000:b2:00.0, compute capability: 3.7)
2020-06-14 07:57:02.955257: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:786] Optimization results for grappler item: graph_to_optimize
2020-06-14 07:57:02.955385: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:788]   debug_stripper: debug_stripper did nothing. time = 0.104ms.
2020-06-14 07:57:02.955407: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:788]   model_pruner: Graph size after: 230 nodes (-137), 229 edges (-137), time = 16.294ms.
2020-06-14 07:57:02.955426: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:788]   constant_folding: Graph size after: 230 nodes (0), 229 edges (0), time = 32.581ms.
2020-06-14 07:57:02.955445: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:788]   arithmetic_optimizer: Graph size after: 230 nodes (0), 229 edges (0), time = 22.228ms.
2020-06-14 07:57:02.955463: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:788]   dependency_optimizer: Graph size after: 230 nodes (0), 229 edges (0), time = 11.635ms.
2020-06-14 07:57:02.955480: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:788]   model_pruner: Graph size after: 230 nodes (0), 229 edges (0), time = 11.75ms.
2020-06-14 07:57:02.955497: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:788]   constant_folding: Graph size after: 230 nodes (0), 229 edges (0), time = 32.576ms.
2020-06-14 07:57:02.955515: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:788]   arithmetic_optimizer: Graph size after: 230 nodes (0), 229 edges (0), time = 21.084ms.
2020-06-14 07:57:02.955547: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:788]   dependency_optimizer: Graph size after: 230 nodes (0), 229 edges (0), time = 11.141ms.
2020-06-14 07:57:02.955565: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:788]   debug_stripper: debug_stripper did nothing. time = 0.441ms.
2020-06-14 07:57:02.955583: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:788]   model_pruner: Graph size after: 230 nodes (0), 229 edges (0), time = 11.298ms.
2020-06-14 07:57:02.955602: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:788]   constant_folding: Graph size after: 230 nodes (0), 229 edges (0), time = 31.582ms.
2020-06-14 07:57:02.955619: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:788]   arithmetic_optimizer: Graph size after: 230 nodes (0), 229 edges (0), time = 21.533ms.
2020-06-14 07:57:02.955636: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:788]   dependency_optimizer: Graph size after: 230 nodes (0), 229 edges (0), time = 13.564ms.
2020-06-14 07:57:02.955653: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:788]   model_pruner: Graph size after: 230 nodes (0), 229 edges (0), time = 13.133ms.
2020-06-14 07:57:02.955671: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:788]   constant_folding: Graph size after: 230 nodes (0), 229 edges (0), time = 31.111ms.
2020-06-14 07:57:02.955723: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:788]   arithmetic_optimizer: Graph size after: 230 nodes (0), 229 edges (0), time = 21.568ms.
2020-06-14 07:57:02.955751: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:788]   dependency_optimizer: Graph size after: 230 nodes (0), 229 edges (0), time = 10.136ms.
2020-06-14 07:57:13.333211: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:786] Optimization results for grappler item: graph_to_optimize
2020-06-14 07:57:13.333580: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:788]   remapper: Graph size after: 229 nodes (-28), 120 edges (-28), time = 15.106ms.
2020-06-14 07:57:13.333595: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:788]   constant_folding: Graph size after: 121 nodes (-108), 120 edges (0), time = 45.185ms.
2020-06-14 07:57:13.333602: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:788]   arithmetic_optimizer: Graph size after: 121 nodes (0), 120 edges (0), time = 15.711ms.
2020-06-14 07:57:13.333609: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:788]   dependency_optimizer: Graph size after: 121 nodes (0), 120 edges (0), time = 4.184ms.
2020-06-14 07:57:13.333616: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:788]   remapper: Graph size after: 121 nodes (0), 120 edges (0), time = 6.306ms.
2020-06-14 07:57:13.333622: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:788]   constant_folding: Graph size after: 121 nodes (0), 120 edges (0), time = 19.253ms.
2020-06-14 07:57:13.333629: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:788]   arithmetic_optimizer: Graph size after: 121 nodes (0), 120 edges (0), time = 16.356ms.
2020-06-14 07:57:13.333636: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:788]   dependency_optimizer: Graph size after: 121 nodes (0), 120 edges (0), time = 3.658ms.
                                                                                
________________________________________________________________________________
Converting classification model to Core ML
loading model...
stripping unused ops...
writing frozen model...
0 assert nodes deleted
137 nodes deleted
81 nodes deleted
0 nodes deleted
2 identity nodes deleted
15 disconnected nodes deleted
[Op Fusion] Fused 162 nodes into BatchNorms.
[Op Fusion] Tuned 1 Reductions.
[SSAConverter] Converting function main ...
[SSAConverter] [1/109] Converting op type: 'Placeholder', name: 'Placeholder', output_shape: (1, 224, 224, 3).
[SSAConverter] [2/109] Converting op type: 'Const', name: 'module_apply_default/hub_input/Mul/y'.
[SSAConverter] [3/109] Converting op type: 'Const', name: 'module_apply_default/hub_input/Sub/y'.
[SSAConverter] [4/109] Converting op type: 'Const', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise/ReadVariableOp', output_shape: (3, 3, 32, 1).
[SSAConverter] [5/109] Converting op type: 'Const', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise/ReadVariableOp', output_shape: (3, 3, 64, 1).
[SSAConverter] [6/109] Converting op type: 'Const', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise/ReadVariableOp', output_shape: (3, 3, 128, 1).
[SSAConverter] [7/109] Converting op type: 'Const', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise/ReadVariableOp', output_shape: (3, 3, 128, 1).
[SSAConverter] [8/109] Converting op type: 'Const', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise/ReadVariableOp', output_shape: (3, 3, 256, 1).
[SSAConverter] [9/109] Converting op type: 'Const', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise/ReadVariableOp', output_shape: (3, 3, 256, 1).
[SSAConverter] [10/109] Converting op type: 'Const', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise/ReadVariableOp', output_shape: (3, 3, 512, 1).
[SSAConverter] [11/109] Converting op type: 'Const', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise/ReadVariableOp', output_shape: (3, 3, 512, 1).
[SSAConverter] [12/109] Converting op type: 'Const', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise/ReadVariableOp', output_shape: (3, 3, 512, 1).
[SSAConverter] [13/109] Converting op type: 'Const', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise/ReadVariableOp', output_shape: (3, 3, 512, 1).
[SSAConverter] [14/109] Converting op type: 'Const', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise/ReadVariableOp', output_shape: (3, 3, 512, 1).
[SSAConverter] [15/109] Converting op type: 'Const', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise/ReadVariableOp', output_shape: (3, 3, 512, 1).
[SSAConverter] [16/109] Converting op type: 'Const', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise/ReadVariableOp', output_shape: (3, 3, 1024, 1).
[SSAConverter] [17/109] Converting op type: 'Const', name: 'module_apply_default/MobilenetV1/Logits/global_pool/reduction_indices', output_shape: (2,).
[SSAConverter] [18/109] Converting op type: 'Const', name: 'final_retrain_ops/biases/final_biases/read', output_shape: (2,).
[SSAConverter] [19/109] Converting op type: 'Mul', name: 'module_apply_default/hub_input/Mul', output_shape: (1, 224, 224, 3).
[SSAConverter] [20/109] Converting op type: 'Sub', name: 'module_apply_default/hub_input/Sub', output_shape: (1, 224, 224, 3).
[SSAConverter] [21/109] Converting op type: 'Transpose', name: 'module_apply_default/hub_input/Sub_to_nchw', output_shape: (1, 3, 224, 224).
[SSAConverter] [22/109] Converting op type: 'Conv2D', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D', output_shape: (1, 32, 112, 112).
[SSAConverter] [23/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 32, 112, 112).
[SSAConverter] [24/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_0/Relu6', output_shape: (1, 32, 112, 112).
[SSAConverter] [25/109] Converting op type: 'DepthwiseConv2dNative', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise', output_shape: (1, 32, 112, 112).
[SSAConverter] [26/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 32, 112, 112).
[SSAConverter] [27/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/Relu6', output_shape: (1, 32, 112, 112).
[SSAConverter] [28/109] Converting op type: 'Conv2D', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D', output_shape: (1, 64, 112, 112).
[SSAConverter] [29/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 64, 112, 112).
[SSAConverter] [30/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Relu6', output_shape: (1, 64, 112, 112).
[SSAConverter] [31/109] Converting op type: 'DepthwiseConv2dNative', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise', output_shape: (1, 64, 56, 56).
[SSAConverter] [32/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 64, 56, 56).
[SSAConverter] [33/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/Relu6', output_shape: (1, 64, 56, 56).
[SSAConverter] [34/109] Converting op type: 'Conv2D', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D', output_shape: (1, 128, 56, 56).
[SSAConverter] [35/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 128, 56, 56).
[SSAConverter] [36/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Relu6', output_shape: (1, 128, 56, 56).
[SSAConverter] [37/109] Converting op type: 'DepthwiseConv2dNative', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise', output_shape: (1, 128, 56, 56).
[SSAConverter] [38/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 128, 56, 56).
[SSAConverter] [39/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/Relu6', output_shape: (1, 128, 56, 56).
[SSAConverter] [40/109] Converting op type: 'Conv2D', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D', output_shape: (1, 128, 56, 56).
[SSAConverter] [41/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 128, 56, 56).
[SSAConverter] [42/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Relu6', output_shape: (1, 128, 56, 56).
[SSAConverter] [43/109] Converting op type: 'DepthwiseConv2dNative', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise', output_shape: (1, 128, 28, 28).
[SSAConverter] [44/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 128, 28, 28).
[SSAConverter] [45/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/Relu6', output_shape: (1, 128, 28, 28).
[SSAConverter] [46/109] Converting op type: 'Conv2D', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D', output_shape: (1, 256, 28, 28).
[SSAConverter] [47/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 256, 28, 28).
[SSAConverter] [48/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Relu6', output_shape: (1, 256, 28, 28).
[SSAConverter] [49/109] Converting op type: 'DepthwiseConv2dNative', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise', output_shape: (1, 256, 28, 28).
[SSAConverter] [50/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 256, 28, 28).
[SSAConverter] [51/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/Relu6', output_shape: (1, 256, 28, 28).
[SSAConverter] [52/109] Converting op type: 'Conv2D', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D', output_shape: (1, 256, 28, 28).
[SSAConverter] [53/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 256, 28, 28).
[SSAConverter] [54/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Relu6', output_shape: (1, 256, 28, 28).
[SSAConverter] [55/109] Converting op type: 'DepthwiseConv2dNative', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise', output_shape: (1, 256, 14, 14).
[SSAConverter] [56/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 256, 14, 14).
[SSAConverter] [57/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/Relu6', output_shape: (1, 256, 14, 14).
[SSAConverter] [58/109] Converting op type: 'Conv2D', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D', output_shape: (1, 512, 14, 14).
[SSAConverter] [59/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 512, 14, 14).
[SSAConverter] [60/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Relu6', output_shape: (1, 512, 14, 14).
[SSAConverter] [61/109] Converting op type: 'DepthwiseConv2dNative', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise', output_shape: (1, 512, 14, 14).
[SSAConverter] [62/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 512, 14, 14).
[SSAConverter] [63/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/Relu6', output_shape: (1, 512, 14, 14).
[SSAConverter] [64/109] Converting op type: 'Conv2D', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D', output_shape: (1, 512, 14, 14).
[SSAConverter] [65/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 512, 14, 14).
[SSAConverter] [66/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Relu6', output_shape: (1, 512, 14, 14).
[SSAConverter] [67/109] Converting op type: 'DepthwiseConv2dNative', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise', output_shape: (1, 512, 14, 14).
[SSAConverter] [68/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 512, 14, 14).
[SSAConverter] [69/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/Relu6', output_shape: (1, 512, 14, 14).
[SSAConverter] [70/109] Converting op type: 'Conv2D', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D', output_shape: (1, 512, 14, 14).
[SSAConverter] [71/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 512, 14, 14).
[SSAConverter] [72/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Relu6', output_shape: (1, 512, 14, 14).
[SSAConverter] [73/109] Converting op type: 'DepthwiseConv2dNative', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise', output_shape: (1, 512, 14, 14).
[SSAConverter] [74/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 512, 14, 14).
[SSAConverter] [75/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/Relu6', output_shape: (1, 512, 14, 14).
[SSAConverter] [76/109] Converting op type: 'Conv2D', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D', output_shape: (1, 512, 14, 14).
[SSAConverter] [77/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 512, 14, 14).
[SSAConverter] [78/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Relu6', output_shape: (1, 512, 14, 14).
[SSAConverter] [79/109] Converting op type: 'DepthwiseConv2dNative', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise', output_shape: (1, 512, 14, 14).
[SSAConverter] [80/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 512, 14, 14).
[SSAConverter] [81/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/Relu6', output_shape: (1, 512, 14, 14).
[SSAConverter] [82/109] Converting op type: 'Conv2D', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D', output_shape: (1, 512, 14, 14).
[SSAConverter] [83/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 512, 14, 14).
[SSAConverter] [84/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Relu6', output_shape: (1, 512, 14, 14).
[SSAConverter] [85/109] Converting op type: 'DepthwiseConv2dNative', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise', output_shape: (1, 512, 14, 14).
[SSAConverter] [86/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 512, 14, 14).
[SSAConverter] [87/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/Relu6', output_shape: (1, 512, 14, 14).
[SSAConverter] [88/109] Converting op type: 'Conv2D', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D', output_shape: (1, 512, 14, 14).
[SSAConverter] [89/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 512, 14, 14).
[SSAConverter] [90/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Relu6', output_shape: (1, 512, 14, 14).
[SSAConverter] [91/109] Converting op type: 'DepthwiseConv2dNative', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise', output_shape: (1, 512, 7, 7).
[SSAConverter] [92/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 512, 7, 7).
[SSAConverter] [93/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/Relu6', output_shape: (1, 512, 7, 7).
[SSAConverter] [94/109] Converting op type: 'Conv2D', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D', output_shape: (1, 1024, 7, 7).
[SSAConverter] [95/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 1024, 7, 7).
[SSAConverter] [96/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Relu6', output_shape: (1, 1024, 7, 7).
[SSAConverter] [97/109] Converting op type: 'DepthwiseConv2dNative', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise', output_shape: (1, 1024, 7, 7).
[SSAConverter] [98/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 1024, 7, 7).
[SSAConverter] [99/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/Relu6', output_shape: (1, 1024, 7, 7).
[SSAConverter] [100/109] Converting op type: 'Conv2D', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D', output_shape: (1, 1024, 7, 7).
[SSAConverter] [101/109] Converting op type: 'BatchNorm', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm/Add_batch_norm', output_shape: (1, 1024, 7, 7).
[SSAConverter] [102/109] Converting op type: 'Relu6', name: 'module_apply_default/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Relu6', output_shape: (1, 1024, 7, 7).
[SSAConverter] [103/109] Converting op type: 'AvgPool', name: 'module_apply_default/MobilenetV1/Logits/global_pool_pooling', output_shape: (1, 1024, 1, 1).
[SSAConverter] [104/109] Converting op type: 'Transpose', name: 'module_apply_default/MobilenetV1/Logits/global_pool_to_nhwc', output_shape: (1, 1, 1, 1024).
[SSAConverter] [105/109] Converting op type: 'Squeeze', name: 'module_apply_default/hub_output/feature_vector/SpatialSqueeze', output_shape: (1, 1024).
[SSAConverter] [106/109] Converting op type: 'Placeholder', name: 'input/BottleneckInputPlaceholder', output_shape: (-1, 1024).
[SSAConverter] [107/109] Converting op type: 'MatMul', name: 'final_retrain_ops/Wx_plus_b/MatMul', output_shape: (-1, 2).
[SSAConverter] [108/109] Converting op type: 'AddV2', name: 'final_retrain_ops/Wx_plus_b/add', output_shape: (-1, 2).
[SSAConverter] [109/109] Converting op type: 'Softmax', name: 'final_result', output_shape: (-1, 2).
Successfully converted to Core ML
________________________________________________________________________________
                                                                                
                                                                                
________________________________________________________________________________
Converting classification model to TensorFlow Lite
Using TensorFlow version: 1.15.2
Using current TFLiteConverter
loading model...
stripping unused ops...
writing frozen model...
Successfully converted to TensorFlow Lite
________________________________________________________________________________
                                                                                
                                                                                
________________________________________________________________________________
Converting classification model to TensorFlow.js
loading model...
stripping unused ops...
writing frozen model...
Writing weight file /mnt/results/reverseoink/training-vt65LuiMR/model_web/model.json...
Successfully converted to TensorFlow.js
________________________________________________________________________________
                                                                                

Output files stored in: 
┌────────────────────┐
│ training-vt65LuiMR │
└────────────────────┘

